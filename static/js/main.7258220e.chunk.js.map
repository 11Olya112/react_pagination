{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","totalResult","slice","existingPages","Math","ceil","useMemo","className","classnames","disabled","href","onClick","map","page","active","length","all","items","from","to","numbers","n","push","getNumbers","App","item","useState","setCurrentPage","value","setValue","id","onChange","event","target","it","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcJ,EAAMK,MACxBJ,EAAUC,EAAcD,EACxBA,EAAUC,GAGNI,EAAgBN,EAAMK,MAAM,EAAGE,KAAKC,KAAK,GAAKP,IAIpD,OAFAQ,mBAAQ,kBAAMN,EAAaH,EAAM,MAAK,CAACC,IAGrC,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAA0B,IAAhBV,IAFd,SAKE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,oBAUDI,EAAcS,KAAI,SAACC,GAAD,OACjB,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQf,IAAgBc,IAE1BF,QAAS,WACPX,EAAaa,IAEf,cAAY,OARd,SAUE,mBAAG,UAAQ,WAAWN,UAAU,YAAYG,KAAI,WAAMG,GAAtD,SACGA,KAVEA,MAcT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUV,IAAgBI,EAAcY,SAF5C,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBI,EAAcY,OAC7CJ,QAAS,kBAAMX,EAAaD,EAAc,IAL5C,uBAWJ,6BACGE,EAAYW,KAAI,SAACI,GAAD,OACf,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YCtElC,IAAMC,ECPC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAKG,CAAW,EAAG,IAAIX,KAAI,SAACS,GAAD,OAAOA,KAE9BG,EAAgB,WAC3B,IAAMC,EAAO,CAAC,IAAK,IAAK,KAAM,MAE9B,EAAsCC,mBAAST,EAAM,IAArD,mBAAOlB,EAAP,KAAoB4B,EAApB,KACA,EAA0BD,mBAAiBD,EAAK,IAAhD,mBAAOG,EAAP,KAAcC,EAAd,KAEM5B,EAAcgB,EAAMf,OACvB0B,EAAQ7B,GAAe6B,GACvBA,EAAQ7B,GAGX,OACE,sBAAKQ,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAR,EACA,IAJH,iBAKaE,EAAY,GALzB,cAMIA,EAAYA,EAAYc,OAAS,GANrC,eAOSE,EAAMF,OAPf,QAUA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRqB,MAAOA,EACPE,GAAG,kBACHvB,UAAU,eACVwB,SAAU,SAACC,GACTH,EAASG,EAAMC,OAAOL,QAN1B,SASGH,EAAKb,KAAI,SAACsB,GAAD,OACR,wBAAQN,MAAOM,EAAf,SACGA,GADqBA,UAO9B,uBAAOC,QAAQ,kBAAkB5B,UAAU,qBAA3C,+BAOF,cAAC,EAAD,CACEV,MAAOoB,EACPnB,SAAU8B,EACV7B,YAAaA,EACbC,aAAc2B,QE7DtBS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7258220e.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport classnames from 'classnames';\n\ntype Props = {\n  total: number[];\n  perPage: number;\n  currentPage: number;\n  onPageChange: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalResult = total.slice(\n    perPage * currentPage - perPage,\n    perPage * currentPage,\n  );\n\n  const existingPages = total.slice(0, Math.ceil(42 / perPage));\n\n  useMemo(() => onPageChange(total[0]), [perPage]);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classnames('page-item', {\n            disabled: currentPage === 1,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {existingPages.map((page) => (\n          <li\n            key={page}\n            className={classnames('page-item', {\n              active: currentPage === page,\n            })}\n            onClick={() => {\n              onPageChange(page);\n            }}\n            aria-hidden=\"true\"\n          >\n            <a data-cy=\"pageLink\" className=\"page-link\" href={`#${page}`}>\n              {page}\n            </a>\n          </li>\n        ))}\n        <li\n          className={classnames('page-item', {\n            disabled: currentPage === existingPages.length,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === existingPages.length}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {totalResult.map((all) => (\n          <li data-cy=\"item\" key={all}>\n            {`Item ${all}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nconst items = getNumbers(1, 42).map((n) => n);\n\nexport const App: React.FC = () => {\n  const item = ['3', '5', '10', '20'];\n\n  const [currentPage, setCurrentPage] = useState(items[0]);\n  const [value, setValue] = useState<string>(item[3]);\n\n  const totalResult = items.slice(\n    +value * currentPage - +value,\n    +value * currentPage,\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        {`(items ${totalResult[0]} - ${\n          totalResult[totalResult.length - 1]\n        } of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            value={value}\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={(event) => {\n              setValue(event.target.value);\n            }}\n          >\n            {item.map((it) => (\n              <option value={it} key={it}>\n                {it}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        total={items}\n        perPage={+value}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}